var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"Modules = [QuantumPrisonersDilemmaModel]\nOrder   = [:type, :function]\nPrivate = false","category":"page"},{"location":"api/#QuantumPrisonersDilemmaModel.QPDM","page":"API","title":"QuantumPrisonersDilemmaModel.QPDM","text":"QPDM{T<:Real} <: AbstractQPDM\n\nA model object for the Quantum Prisoner's Dilemma Model. The QPDM has four basis states:\n\nopponent defects and you defect \nopponent defects and you cooperate \nopponent cooperates and you defect \nopponent cooperates and you cooperate\n\nThe bases are orthonormal and in standard form. The model assumes three conditions:\n\nPlayer 1 (you) is told that player 2 defected\nPlayer 1 (you) is told that player 2 cooperated\nPlayer 1 (you) is not informed of player's action\n\nModel inputs and outputs are assumed to be in the order above. \n\nFields\n\nμd: utility for defecting \nμc: utility for cooperating \nγ: entanglement parameter for beliefs and actions \n\nExample\n\nusing QuantumPrisonersDilemmaModel\nmodel = QPDM(;μd=.51, γ=2.09)\n\nReferences\n\nPothos, E. M., & Busemeyer, J. R. (2009). A quantum probability explanation for violations of ‘rational’decision theory. Proceedings of the Royal Society B: Biological Sciences, 276(1665), 2171-2178.\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.rand-Tuple{QuantumPrisonersDilemmaModel.AbstractQPDM, Int64}","page":"API","title":"Base.rand","text":"rand(dist::AbstractQPDM, n::Int; t = π / 2)\n\nGenerates simulated data for the following conditions:\n\nPlayer 1 is told that player 2 defected\nPlayer 1 is told that player 2 cooperated\nPlayer 1 is not informed of player's action\n\nArguments\n\ndist::AbstractQPDM\nn: the number of trials per condition \n\nKeywords\n\nt = π / 2: time of decision\n\nExample\n\nusing QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\ndata = rand(model, 100)\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.logpdf-Tuple{QuantumPrisonersDilemmaModel.AbstractQPDM, Int64, Vector{Int64}}","page":"API","title":"Distributions.logpdf","text":"logpdf(dist::AbstractQPDM, n::Int, n_d::Vector{Int}; t = π / 2)\n\nReturns the joint log density given data for the following conditions:\n\nPlayer 1 is told that player 2 defected\nPlayer 1 is told that player 2 cooperated\nPlayer 1 is not informed of player's action\n\nArguments\n\ndist::AbstractQPDM\nn: the number of trials per condition \nn_d: the number of defections in each condition \n\nKeywords\n\nt = π / 2: time of decision\n\nExample\n\nusing QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\nn_trials = 100\ndata = rand(model, n_trials)\nlogpdf(model, n_trials, data)\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.pdf-Tuple{QuantumPrisonersDilemmaModel.AbstractQPDM, Int64, Vector{Int64}}","page":"API","title":"Distributions.pdf","text":"pdf(dist::AbstractQPDM, n::Int, n_d::Vector{Int}; t = π / 2)\n\nReturns the joint probability density given data for the following conditions:\n\nPlayer 1 is told that player 2 defected\nPlayer 1 is told that player 2 cooperated\nPlayer 1 is not informed of player's action\n\nArguments\n\ndist::AbstractQPDM\nn: the number of trials per condition \nn_d: the number of defections in each condition \n\nKeywords\n\nt = π / 2: time of decision\n\n\n\n\n\n","category":"method"},{"location":"api/#QuantumPrisonersDilemmaModel.predict-Tuple{QuantumPrisonersDilemmaModel.AbstractQPDM}","page":"API","title":"QuantumPrisonersDilemmaModel.predict","text":"predict(dist::AbstractQPDM; t = π / 2)\n\nReturns predicted response probability for the following conditions:\n\nPlayer 1 is told that player 2 defected\nPlayer 1 is told that player 2 cooperated\nPlayer 1 is not informed of player's action\n\nArguments\n\ndist::AbstractQPDM\n\nKeywords\n\nt = π / 2: time of decision\n\nExample\n\nusing QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\npredict(model)\n\n\n\n\n\n","category":"method"},{"location":"model_description/#Introduction","page":"Model Description","title":"Introduction","text":"","category":"section"},{"location":"model_description/#Bases","page":"Model Description","title":"Bases","text":"","category":"section"},{"location":"model_description/","page":"Model Description","title":"Model Description","text":"The quantum prisoner's dilemma model (QPDM) consists of four basis states respesenting the four possible outcomes for defect (D) and cooperate (C):","category":"page"},{"location":"model_description/","page":"Model Description","title":"Model Description","text":"mathbfS = kettextrmDDkettextrmDCkettextrmCDkettextrmCC","category":"page"},{"location":"model_description/","page":"Model Description","title":"Model Description","text":"where basis ketij repesents the outcome in which the opponent chooses i and you choose j. Combining the basis vectors into a single matrix, we get the identity matrix:","category":"page"},{"location":"model_description/","page":"Model Description","title":"Model Description","text":"mathbfI_4 = beginbmatrix\t\t\n\t1  0  0  0\n\t0  1  0  0\n\t0  0  1  0\n\t0  0  0  1\nendbmatrix","category":"page"},{"location":"model_description/#States","page":"Model Description","title":"States","text":"","category":"section"},{"location":"model_description/#Action-Selection","page":"Model Description","title":"Action Selection","text":"","category":"section"},{"location":"model_description/#Interference-Effect","page":"Model Description","title":"Interference Effect","text":"","category":"section"},{"location":"model_description/#References","page":"Model Description","title":"References","text":"","category":"section"},{"location":"overview/#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"This page provides an overview of the API along with examples. ","category":"page"},{"location":"overview/#Make-Predictions","page":"Overview","title":"Make Predictions","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"The quantum prisoner's dilemma model (QPDM) generates predictions for three conditions:","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"Player 1 is told that player 2 defected\nPlayer 1 is told that player 2 cooperated\nPlayer 1 is not informed of player's action","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"using QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\npredict(model)","category":"page"},{"location":"overview/#Simulate-Model","page":"Overview","title":"Simulate Model","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"The code block below demonstrates how to generate simulated data from the model using rand. In the example, we will generate 100 simulated trials for each condition. ","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"using QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\ndata = rand(model, 100)","category":"page"},{"location":"overview/#Evaluate-Log-Likelihood","page":"Overview","title":"Evaluate Log Likelihood","text":"","category":"section"},{"location":"overview/","page":"Overview","title":"Overview","text":"The log likelihood of data can be evaluated using logpdf. In the code block below, we generate simulated data and evaluate the logpdf: ","category":"page"},{"location":"overview/","page":"Overview","title":"Overview","text":"using QuantumPrisonersDilemmaModel \nmodel = QPDM(;μd=.51, γ=2.09)\nn_trials = 100\ndata = rand(model, n_trials)\nlogpdf(model, n_trials, data)","category":"page"},{"location":"#QuantumPrisonersDilemmaModel.jl","page":"Home","title":"QuantumPrisonersDilemmaModel.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package contains code for a quantum cognition model of the disjunction effect in the prisoner's dilemma. ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is not registered in Julia's general registry. However, there two ways you can install the package. Option 1 is to install without version control. In the REPL, use ] to switch to the package mode and enter the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"add https://github.com/itsdfish/QuantumPrisonersDilemmaModel.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Option 2 is to install via a custom registry. The advantage of this approach is that you have more control over version control, expecially if you are using a project-specfic environment. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Install the registry using the directions found here.\nAdd the package by typing ] into the REPL and then typing (or pasting):","category":"page"},{"location":"","page":"Home","title":"Home","text":"add QuantumPrisonersDilemmaModel","category":"page"},{"location":"#Interference-Effect","page":"Home","title":"Interference Effect","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The interference effect occurs when decisions in the prisoner's dilemma violate the law of total probability. Consider an experiment of the prisoner's dilemma with three conditions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Player 1 is told that player 2 defected: R_2=d\nPlayer 1 is told that player 2 cooperated: R_2=c\nPlayer 1 is not informed of player's action","category":"page"},{"location":"","page":"Home","title":"Home","text":"The law of total probability requires:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pr(R_1=d) = Pr(R_1=d mid R_2=d) Pr(R_2=d) + Pr(R_1=d mid R_2=c) Pr(R_2=c)","category":"page"},{"location":"","page":"Home","title":"Home","text":"where the left hand side corresponds to condition 3 and the terms on the right hand side correspond to conditions 1 and 2, respectively. When this inequality does not hold, an interference effect occurs. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"An important property of the law of total probability is that it requires condition 3 to be a weighted average of conditions 1 and 2. This implies the following ordering of terms:","category":"page"},{"location":"","page":"Home","title":"Home","text":"min(Pr(R_1=d mid R_2=d) Pr(R_1=d mid R_2=c)) leq Pr(R_1=d) leq max(Pr(R_1=d mid R_2=d) Pr(R_1=d mid R_2=c))","category":"page"},{"location":"","page":"Home","title":"Home","text":"which is violated in human decision making, leading to an interference effect. The results below show a typical response pattern:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Condition Formula Data Model\n1 Pr(R_1=d mid R_2=d) .84 .81\n2 Pr(R_1=d mid R_2=c) .66 .65\n3 Pr(R_1=d) .55 .57","category":"page"},{"location":"","page":"Home","title":"Home","text":"An interference effect is present in the data because the response probability in condition 3 is below the response probabilities in conditions 1 and 2. The predictions of the quantum model are shown in the last column.","category":"page"},{"location":"#QPDM-Predictions","page":"Home","title":"QPDM Predictions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"As a simple example, the code block illustrates how to generate the predictions in the table above. The first parameter mu_d is the utility for defecting. When no value is passed for the utility of cooperating, mu_d = mu_c. The parameter gamma is the entanglement parameter which aligns beliefs about the opponents action and one's own action. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using QuantumPrisonersDilemmaModel\nmodel = QPDM(;μd=.51, γ=2.09)\npreds = predict(model)","category":"page"},{"location":"#References","page":"Home","title":"References","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pothos, E. M., & Busemeyer, J. R. (2009). A quantum probability explanation for violations of ‘rational’decision theory. Proceedings of the Royal Society B: Biological Sciences, 276(1665), 2171-2178.","category":"page"}]
}
